SET DB_NAME = 'dev_payments';
SET sh_stage = 'STAGING';
SET Sh_raw = 'raw';
SET sh_mart = 'mart';
CREATE DATABASE IF NOT EXISTS IDENTIFIER($DB_NAME);
CREATE SCHEMA IF NOT EXISTS IDENTIFIER($sh_mart);
USE DATABASE IDENTIFIER($DB_NAME);
USE SCHEMA IDENTIFIER($sh_mart);


CREATE OR REPLACE TABLE dim_currency
(
    CURR_ID INT PRIMARY KEY IDENTITY(1,1),
    CURRENCY VARCHAR,
    INSERT_TS  TIMESTAMP DEFAULT TO_TIMESTAMP_NTZ(CURRENT_TIMESTAMP)
) COMMENT = 'THIS IS CURRENCY DIMENSION TABLE';


INSERT INTO dim_currency(CURRENCY)
SELECT DISTINCT CURRENCY FROM IDENTIFIER($DB_NAME).IDENTIFIER($sh_stage).PAYMENTS_STAGING_CLEAN;


-- PROCEDURE TO UPDATE THE CURRENCY DIM TABLE:

CREATE OR REPLACE PROCEDURE PROC_DIM_CURRENCY_UPDATE()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE 
    rows_inserted INT;
BEGIN
    INSERT INTO dim_currency(CURRENCY)
    SELECT DISTINCT S.CURRENCY FROM IDENTIFIER($DB_NAME).IDENTIFIER($sh_stage).PAYMENTS_STAGING_CLEAN  S
    WHERE NOT EXISTS
    (
        SELECT 1 FROM dim_currency  T
        WHERE S.CURRENCY = T.CURRENCY
    );

    rows_inserted  := SQLROWCOUNT;
    RETURN 'Inserted ' || rows_inserted || ' New Currencies';
END;
$$;


-- TASK TO CALL THE THINGS:
CREATE OR REPLACE TASK TASK_RUN_CURRENCY_DIM_PROC
WAREHOUSE = 'COMPUTE_WH'
SCHEDULE = 'USING CRON * * * * * UTC'
AS
CALL PROC_DIM_CURRENCY_UPDATE();



ALTER TASK TASK_RUN_CURRENCY_DIM_PROC RESUME;